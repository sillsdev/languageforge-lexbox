name: lexbox

services:
  lexbox-api:
    tty: true # for dev tools
    stdin_open: true # for dev tools
    init: true
    build:
      context: backend
      dockerfile: LexBoxApi/dev.Dockerfile
      args:
        AppVersion: docker-dev
    ports:
      - "5158:5158" # 5158 exposed here for dev tools, and the runtime should only expose 80
    # https://docs.docker.com/compose/compose-file/#depends_on
    depends_on:
      db:
        condition: service_healthy
      hgweb:
        condition: service_started
      hgresumable:
        condition: service_started
      otel-collector:
        condition: service_started
      maildev:
        condition: service_started
    volumes:
      - ./hgweb/repos:/hg-repos

      # for dev convenience
      - ./backend:/src/backend
      - nuget-cache:/root/.nuget/packages
    env_file: .env
    environment:
      DbConfig__LexBoxConnectionString: Host=db;Port=5432;Username=postgres;Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      Otel__Endpoint: http://otel-collector:4317
      HgConfig__RepoPath: /hg-repos
      HgConfig__HgWebUrl: http://hgweb:8088
      ReverseProxy__Clusters__hgWeb__Destinations__hgWebServer__Address: http://hgweb:8088
      ReverseProxy__Clusters__resumableWeb__Destinations__resumableWebServer__Address: http://hgresumable:80
      Authentication__Jwt__Secret: dev-secret_but-it-must-be-32-characters-long
      # always passes key, more info here: https://developers.cloudflare.com/turnstile/reference/testing
      CloudFlare__TurnstileKey: 1x0000000000000000000000000000000AA
      Email__SmtpHost: maildev
      Email__SmtpPort: 1025
      Email__SmtpUser: ${SMTP_USER}
      Email__SmtpPassword: ${SMTP_PASSWORD}
      Email__From: "Language Depot <no-reply@test.org>"
      Email__EmailRenderHost: ui:3000

      # for dev convenience
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_URLS: http://0.0.0.0:5158

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5158/api/healthz"]
      interval: 15s
      timeout: 5s
      retries: 5
  maildev:
    image: maildev/maildev # https://github.com/maildev/maildev/blob/master/README.md#usage
    ports:
      - "1080:1080" # ui port
      - "1025:1025" # smtp port
    environment:
      MAILDEV_INCOMING_USER: maildev
      MAILDEV_INCOMING_PASS: maildev_pass

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5433:5432" # 5433 exposed here for dev tools
    volumes:
      - db-data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: .env

  redmine-db:
    image: mysql:5.7.41
    platform:  linux/amd64
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: the_password
    volumes:
      - redmine_db_data:/var/lib/mysql

  hgweb:
    build: ./hgweb
    ports:
      - "8088:8088" # 8080 exposed here for dev tools
    environment:
      CUSTOM_PORT: 8088
      OTEL_ENDPOINT: otel-collector:4317
    volumes:
      - ./hgweb/repos:/var/hg/repos

  hgresumable:
    build: ./hgresumable
    platform:  linux/amd64
    ports:
      - "8034:80" # 8034 exposed here for dev tools
    volumes:
      - ./hgweb/repos:/var/vcs/public
      - hgresumable-cache:/var/cache/hgresume

  otel-collector:
    image: otel/opentelemetry-collector:0.73.0
    volumes:
      # for dev convenience
      - ./otel/collector-config.yaml:/etc/otelcol/config.yaml
    ports:
      # TODO: determine why these are exposed to the host.
      - 4317:4317 # OTLP gRPC receiver - only required when running backend locally
      - 4318:4318 # OTLP http receiver
      #- 13133:13133 # health_check extension - only required when running backend locally
    env_file: .env
    # TODO: need to figure out how to keep otel from making fully qualified requests to the 4318:, it's generating CORS issues.
    # environment:
    #   - HTTPS_PROXY='proxy:80'


  ui:
    build:
      context: ./frontend
      args:
        - APP_VERSION=dockerDev
    ports:
      - "3000:3000" # 3000 exposed here for development
    env_file: ./frontend/.env
    environment:
      BACKEND_HOST: http://lexbox-api:5158
      OTEL_ENDPOINT: http://otel-collector:4318

  proxy:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ui
      - lexbox-api
      - otel-collector

volumes:
    db-data:
    hg-repos:
      # wanted this shared volume to get loaded from local filesystem during dev only
      driver: local
      driver_opts:
        device: ./hgweb/repos
        o: bind
        type: none
    redmine_db_data:
    hgresumable-cache:
    nuget-cache:
