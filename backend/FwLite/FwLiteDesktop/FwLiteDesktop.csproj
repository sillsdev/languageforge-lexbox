<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
<!--        for now we only target windows-->
        <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
<!--		<TargetFrameworks Condition="!$([MSBuild]::IsOSPlatform('windows'))">net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>-->
<!--		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>-->
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>FwLiteDesktop</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
        <Platform Condition="$([MSBuild]::IsOSPlatform('windows'))">x64</Platform>

		<!-- controls display name in Package.appxmanifest -->
		<ApplicationTitle>FW Lite (nightly)</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.sil.fwlitedesktop</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Debug' ">
        <WindowsPackageType>None</WindowsPackageType>
        <PublishReadyToRun>false</PublishReadyToRun>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Release' ">
        <!--        single file disabled as it's less efficient for updates-->
        <PublishSingleFile>false</PublishSingleFile>
        <SelfContained>true</SelfContained>
        <PublishTrimmed>false</PublishTrimmed>
    </PropertyGroup>
    <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(Configuration)' == 'Release'">
<!--        <AppxPackageSigningEnabled>true</AppxPackageSigningEnabled>-->
<!--        <PackageCertificateThumbprint>A10612AF095FD8F8255F4C6691D88F79EF2B135E</PackageCertificateThumbprint>-->
    </PropertyGroup>
<!--    <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(RuntimeIdentifierOverride)' != ''">-->
<!--        <RuntimeIdentifier>$(RuntimeIdentifierOverride)</RuntimeIdentifier>-->
<!--    </PropertyGroup>-->


	<ItemGroup>
		<!-- App Icon -->
        <!--        background color is required for mac per: https://learn.microsoft.com/en-us/dotnet/maui/user-interface/images/app-icons?view=net-maui-8.0&tabs=windows#recolor-the-background -->
        <MauiIcon Condition="$([MSBuild]::IsOSPlatform('osx'))" Include="Resources\AppIcon\logo_light.svg" Color="#1c4e80" />
		<MauiIcon Include="Resources\AppIcon\logo_light.svg" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
        <PackageReference Include="NReco.Logging.File" Version="1.2.1" />
        <PackageReference Include="SIL.LCModel" Version="11.0.0-pr0302-0101" />
	</ItemGroup>

	<ItemGroup>
	    <ProjectReference Include="..\LocalWebApp\LocalWebApp.csproj" />

        <ProjectReference Include="..\LcmCrdt\LcmCrdt.csproj" />
        <ProjectReference Include="..\MiniLcm\MiniLcm.csproj" />
	</ItemGroup>

</Project>
