{
  DerivedTypes: [
    {
      DerivedType: RemoteResourceUploadedChange,
      TypeDiscriminator: uploaded:RemoteResource
    },
    {
      DerivedType: CreateRemoteResourceChange,
      TypeDiscriminator: create:remote-resource
    },
    {
      DerivedType: CreateRemoteResourcePendingUploadChange,
      TypeDiscriminator: create:pendingUpload
    },
    {
      DerivedType: DeleteChange<RemoteResource>,
      TypeDiscriminator: delete:RemoteResource
    },
    {
      DerivedType: JsonPatchChange<Entry>,
      TypeDiscriminator: jsonPatch:Entry
    },
    {
      DerivedType: JsonPatchChange<Sense>,
      TypeDiscriminator: jsonPatch:Sense
    },
    {
      DerivedType: JsonPatchChange<ExampleSentence>,
      TypeDiscriminator: jsonPatch:ExampleSentence
    },
    {
      DerivedType: JsonPatchChange<WritingSystem>,
      TypeDiscriminator: jsonPatch:WritingSystem
    },
    {
      DerivedType: JsonPatchChange<PartOfSpeech>,
      TypeDiscriminator: jsonPatch:PartOfSpeech
    },
    {
      DerivedType: JsonPatchChange<SemanticDomain>,
      TypeDiscriminator: jsonPatch:SemanticDomain
    },
    {
      DerivedType: JsonPatchChange<ComplexFormType>,
      TypeDiscriminator: jsonPatch:ComplexFormType
    },
    {
      DerivedType: JsonPatchChange<Publication>,
      TypeDiscriminator: jsonPatch:Publication
    },
    {
      DerivedType: DeleteChange<Entry>,
      TypeDiscriminator: delete:Entry
    },
    {
      DerivedType: DeleteChange<Sense>,
      TypeDiscriminator: delete:Sense
    },
    {
      DerivedType: DeleteChange<ExampleSentence>,
      TypeDiscriminator: delete:ExampleSentence
    },
    {
      DerivedType: DeleteChange<WritingSystem>,
      TypeDiscriminator: delete:WritingSystem
    },
    {
      DerivedType: DeleteChange<PartOfSpeech>,
      TypeDiscriminator: delete:PartOfSpeech
    },
    {
      DerivedType: DeleteChange<SemanticDomain>,
      TypeDiscriminator: delete:SemanticDomain
    },
    {
      DerivedType: DeleteChange<ComplexFormType>,
      TypeDiscriminator: delete:ComplexFormType
    },
    {
      DerivedType: DeleteChange<ComplexFormComponent>,
      TypeDiscriminator: delete:ComplexFormComponent
    },
    {
      DerivedType: DeleteChange<Publication>,
      TypeDiscriminator: delete:Publication
    },
    {
      DerivedType: SetPartOfSpeechChange,
      TypeDiscriminator: SetPartOfSpeechChange
    },
    {
      DerivedType: AddSemanticDomainChange,
      TypeDiscriminator: AddSemanticDomainChange
    },
    {
      DerivedType: RemoveSemanticDomainChange,
      TypeDiscriminator: RemoveSemanticDomainChange
    },
    {
      DerivedType: ReplaceSemanticDomainChange,
      TypeDiscriminator: ReplaceSemanticDomainChange
    },
    {
      DerivedType: CreateEntryChange,
      TypeDiscriminator: CreateEntryChange
    },
    {
      DerivedType: CreateSenseChange,
      TypeDiscriminator: CreateSenseChange
    },
    {
      DerivedType: CreateExampleSentenceChange,
      TypeDiscriminator: CreateExampleSentenceChange
    },
    {
      DerivedType: CreatePartOfSpeechChange,
      TypeDiscriminator: CreatePartOfSpeechChange
    },
    {
      DerivedType: CreateSemanticDomainChange,
      TypeDiscriminator: CreateSemanticDomainChange
    },
    {
      DerivedType: CreateWritingSystemChange,
      TypeDiscriminator: CreateWritingSystemChange
    },
    {
      DerivedType: CreatePublicationChange,
      TypeDiscriminator: CreatePublicationChange
    },
    {
      DerivedType: AddComplexFormTypeChange,
      TypeDiscriminator: AddComplexFormTypeChange
    },
    {
      DerivedType: AddEntryComponentChange,
      TypeDiscriminator: AddEntryComponentChange
    },
    {
      DerivedType: RemoveComplexFormTypeChange,
      TypeDiscriminator: RemoveComplexFormTypeChange
    },
    {
      DerivedType: AddPublicationChange,
      TypeDiscriminator: AddPublicationChange
    },
    {
      DerivedType: RemovePublicationChange,
      TypeDiscriminator: RemovePublicationChange
    },
    {
      DerivedType: ReplacePublicationChange,
      TypeDiscriminator: ReplacePublicationChange
    },
    {
      DerivedType: SetComplexFormComponentChange,
      TypeDiscriminator: SetComplexFormComponentChange
    },
    {
      DerivedType: CreateComplexFormType,
      TypeDiscriminator: CreateComplexFormType
    },
    {
      DerivedType: SetOrderChange<Sense>,
      TypeDiscriminator: SetOrderChange:Sense
    },
    {
      DerivedType: SetOrderChange<ExampleSentence>,
      TypeDiscriminator: SetOrderChange:ExampleSentence
    },
    {
      DerivedType: SetOrderChange<ComplexFormComponent>,
      TypeDiscriminator: SetOrderChange:ComplexFormComponent
    }
  ],
  IgnoreUnrecognizedTypeDiscriminators: false,
  TypeDiscriminatorPropertyName: $type
}