version: 3
includes:
  ui:
    taskfile: ../../frontend/Taskfile.yml
    dir: ../../frontend
    internal: true

tasks:

  web:
    aliases:
      - web-for-develop
    desc: Run FwLiteWeb with Local LexBox, requires vite dev server to be running, use task fw-lite-web in root
    dir: ./FwLiteWeb
    cmd: dotnet watch --no-hot-reload
  web-prod:
    deps: [ ui:build-viewer ]
    dir: ./FwLiteWeb
    cmd: dotnet run -- --FwLite:UseDevAssets=false
  web-chaos:
    desc: Run FwLiteWeb with some Chaos injected to http requests to lexbox, requests will have chaos 30% of the time, this includes some latency of 5 seconds
    dir: ./FwLiteWeb
    env:
      FW_LITE_CHAOS: true
    cmd: dotnet run

  tool-restore:
    cmd: dotnet tool restore
  add-migration:
    deps: [ tool-restore ]
    desc: 'Usage: task add-migration -- "MigrationName"'
    dir: ./LcmCrdt
    cmd: dotnet ef migrations add {{.CLI_ARGS}}

  has-pending-model-changes:
    deps: [ tool-restore ]
    dir: ./LcmCrdt
    cmds:
      - dotnet ef migrations has-pending-model-changes {{.CLI_ARGS}}

  remove-last-migration:
    desc: "This will remove the last migration, don't remove migrations that have been pushed to production, but you can remove ones you created locally."
    deps: [ tool-restore ]
    dir: ./LcmCrdt
    cmds:
      - dotnet ef migrations remove

  maui-windows:
    desc: Run Maui Windows, requires vite dev server to be running, use task fw-lite-win in root
    dir: ./FwLiteMaui
    cmd: dotnet run -f net9.0-windows10.0.19041.0

  publish-maui-windows:
    deps: [ publish-maui-windows-msix, publish-maui-windows-portable]

  publish-maui-windows-portable:
    dir: ./FwLiteMaui
    cmds:
      - dotnet publish -f net9.0-windows10.0.19041.0 --artifacts-path ../artifacts -p:WindowsPackageType=None -p:BuildAndroid=false

  publish-maui-windows-msix:
    dir: ./FwLiteMaui
    cmds:
      - dotnet publish -f net9.0-windows10.0.19041.0 --artifacts-path ../artifacts -p:BuildAndroid=false

  run-maui-android:
    dir: ./FwLiteMaui
    cmd: task build-maui-android -- "-t:InstallAndroidDependencies;Run"

  build-maui-android:
    deps: [ ui:build-viewer ]
    dir: ./FwLiteMaui
    cmd: dotnet build -f net9.0-android -t:InstallAndroidDependencies -p:AcceptAndroidSdkLicenses=True {{.CLI_ARGS}} # "-p:AndroidSdkDirectory=D:\tools\android"

  build-mini-lcm-sdk:
    desc: Builds the sdk, a zip with the FwLiteWeb server with a project and config to run locally
    dir: ./FwLiteWeb
    deps: [ ui:build-viewer ]
    cmds:
      - dotnet publish -r win-x64 --artifacts-path ../artifacts -p:PublishSingleFile=true
      - pwsh -Command "mv ../artifacts/publish/FwLiteWeb/release_win-x64/appsettings.sdk.json ../artifacts/publish/FwLiteWeb/release_win-x64/appsettings.Production.json"
      - pwsh -Command "mkdir ../artifacts/publish/FwLiteWeb/release_win-x64/fw-lite-projects"
      - pwsh -Command "mkdir ../artifacts/publish/FwLiteWeb/release_win-x64/fw-projects"
      - pwsh -Command "Compress-Archive -Force -Path ../artifacts/publish/FwLiteWeb/release_win-x64 -DestinationPath ../artifacts/publish/FwLiteWeb/release_win-x64.zip"


  publish-web-all:
    cmds:
      - task: publish-web-win
      - task: publish-web-linux
      - task: publish-web-osx
      - task: publish-web-osx-arm
  publish-web-win:
    dir: ./FwLiteWeb
    deps: [ ui:build-viewer ]
    cmd: dotnet publish -r win-x64
  publish-web-win-arm:
    dir: ./FwLiteWeb
    cmd: dotnet publish -r win-arm64
  publish-web-linux:
    dir: ./FwLiteWeb
    cmd: dotnet publish -r linux-x64
  publish-web-osx:
    dir: ./FwLiteWeb
    cmd: dotnet publish -r osx-x64
  publish-web-osx-arm:
    dir: ./FwLiteWeb
    cmd: dotnet publish -r osx-arm64


  test-quick:
    cmd: dotnet test ../../FwLiteOnly.slnf --filter "Category!=Slow&Category!=Integration"
  test:
    cmd: dotnet test ../../FwLiteOnly.slnf --filter Category!=Slow
  test-full:
    cmd: dotnet test ../../FwLiteOnly.slnf
