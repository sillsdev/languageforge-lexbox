<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <Mercurial4ChorusDestDir>$(MSBuildProjectDirectory)</Mercurial4ChorusDestDir>
    <!-- To switch Mercurial versions, do dotnet build /p:MercurialVersion=3 followed by dotnet test -->
    <!-- Note that if you run dotnet test /p:MercurialVersion=3 it will not work as expected; you must run dotnet build first in order to switch Mercurial versions -->
    <MercurialVersion Condition=" '$(MercurialVersion)' == '' ">6</MercurialVersion>
  </PropertyGroup>
  <Choose>
    <When Condition=" '$(MercurialVersion)' == '6' ">
      <ItemGroup>
        <PackageReference Include="SIL.Chorus.LibChorus" />
        <PackageReference Include="SIL.Chorus.Mercurial" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include="SIL.Chorus.LibChorus" />
        <PackageReference Include="SIL.Chorus.Mercurial" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" />
    <PackageReference Include="Microsoft.Extensions.TimeProvider.Testing" />
    <PackageReference Include="Squidex.Assets.TusClient" />
    <PackageReference Include="Microsoft.Extensions.Configuration" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Extensions.Options" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Moq" />
    <PackageReference Include="Moq.Contrib.HttpClient" />
    <PackageReference Include="FluentAssertions" />
    <PackageReference Include="SIL.ChorusPlugin.LfMergeBridge" />
    <PackageReference Include="SIL.Core" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="GitHubActionsTestLogger">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="XunitXml.TestLogger" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LexBoxApi\LexBoxApi.csproj" />
    <ProjectReference Include="..\LexCore\LexCore.csproj" />
    <ProjectReference Include="..\LexData\LexData.csproj" />
    <ProjectReference Include="..\FixFwData\FixFwData.csproj" />
    <ProjectReference Include="..\FwHeadless\FwHeadless.csproj" />
    <!-- <ProjectReference Include="../../../csharp/flexbridge/src/LfMergeBridge/LfMergeBridge.csproj" />
      <ProjectReference Include="..\..\..\csharp\chorus\src\LibChorus\LibChorus.csproj" /> -->
  </ItemGroup>
  <ItemGroup>
    <Using Include="Xunit" />
    <Using Include="FluentAssertions" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Mercurial\**" CopyToOutputDirectory="Always" />
    <Content Include="MercurialExtensions\**" CopyToOutputDirectory="Always" />
    <Content Include="test-template-repo.zip" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <Target Name="CreateFixFwDataExe" AfterTargets="Build" Condition="Exists('$(OutputPath)/FixFwData') And !Exists('$(OutputPath)/FixFwData.exe')">
    <Message Text="Creating FixFwData.exe in $(OutputPath) on Linux since FLExBridge requires the .exe extension" />
    <Exec Command="ln FixFwData FixFwData.exe" WorkingDirectory="$(OutputPath)" />
  </Target>
</Project>
