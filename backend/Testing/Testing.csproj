<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <IsPackable>false</IsPackable>
        <Mercurial4ChorusDestDir>$(MSBuildProjectDirectory)</Mercurial4ChorusDestDir>
        <!-- To switch Mercurial versions, do dotnet build /p:MercurialVersion=6 followed by dotnet test -->
        <!-- Note that if you run dotnet test /p:MercurialVersion=6 it will not work as expected; you must run dotnet build first in order to switch Mercurial versions -->
        <MercurialVersion Condition=" '$(MercurialVersion)' == '' ">3</MercurialVersion>
    </PropertyGroup>

    <Choose>
        <When Condition=" '$(MercurialVersion)' == '6' ">
            <ItemGroup>
                <PackageReference Include="SIL.Chorus.LibChorus" Version="6.0.0-beta0044" />
                <PackageReference Include="SIL.Chorus.Mercurial" Version="6.5.1.25" />
            </ItemGroup>
        </When>
        <Otherwise>
            <ItemGroup>
                <PackageReference Include="SIL.Chorus.LibChorus" Version="6.0.0-beta0041" />
                <PackageReference Include="SIL.Chorus.Mercurial" Version="3.0.3.11" />
            </ItemGroup>
        </Otherwise>
    </Choose>
    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.Options" Version="8.0.2" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
        <PackageReference Include="Microsoft.Playwright" Version="1.41.2" />
        <PackageReference Include="Microsoft.Playwright.TestAdapter" Version="1.41.2" />
        <PackageReference Include="Moq" Version="4.20.70" />
        <PackageReference Include="Shouldly" Version="4.2.1" />
        <PackageReference Include="SIL.ChorusPlugin.LfMergeBridge" Version="4.1.0" />
        <PackageReference Include="SIL.Core" Version="13.0.0-beta0074" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="7.3.0" />
        <PackageReference Include="xunit" Version="2.6.6" />
        <PackageReference Include="xunit.runner.visualstudio" Version="2.5.6">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="coverlet.collector" Version="6.0.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="XunitXml.TestLogger" Version="3.1.17" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\LexBoxApi\LexBoxApi.csproj" />
      <ProjectReference Include="..\LexCore\LexCore.csproj" />
      <ProjectReference Include="..\LexData\LexData.csproj" />
      <ProjectReference Include="..\FixFwData\FixFwData.csproj" />
      <!-- <ProjectReference Include="../../../csharp/flexbridge/src/LfMergeBridge/LfMergeBridge.csproj" />
      <ProjectReference Include="..\..\..\csharp\chorus\src\LibChorus\LibChorus.csproj" /> -->
    </ItemGroup>

    <ItemGroup>
      <Content Include="Mercurial\**" CopyToOutputDirectory="Always" />
      <Content Include="MercurialExtensions\**" CopyToOutputDirectory="Always" />
    </ItemGroup>

  <Target Name="CreateFixFwDataExe" AfterTargets="Build" Condition="Exists('$(OutputPath)/FixFwData') And !Exists('$(OutputPath)/FixFwData.exe')">
    <Message Text="Creating FixFwData.exe in $(OutputPath) on Linux since FLExBridge requires the .exe extension" />
    <Exec Command="ln FixFwData FixFwData.exe" WorkingDirectory="$(OutputPath)" />
  </Target>
</Project>
