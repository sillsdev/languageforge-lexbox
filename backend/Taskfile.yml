version: 3
includes:
  ui:
    taskfile: ../frontend/Taskfile.yml
    dir: ../frontend

tasks:
  api-only:
    aliases: [ o, only ]
    dir: ./LexBoxApi
    interactive: true
    cmds:
      - dotnet watch

  migrate-db:
    dir: ./LexBoxApi
    cmds:
      - dotnet run migrate --environment "Development"

  add-migration:
    desc: 'usage: task add-migration -- "migration name". Often followed by `task database-update`.'
    dir: ./LexBoxApi
    cmds:
      - dotnet ef migrations add --project ../LexData/LexData.csproj --startup-project LexBoxApi.csproj --context LexData.LexBoxDbContext --output-dir Migrations {{.CLI_ARGS}}

  remove-last-migration:
    desc: "This will remove the last migration, don't remove migrations that have been pushed to production, but you can remove ones you created locally."
    dir: ./LexBoxApi
    cmds:
      - dotnet ef migrations remove --project ../LexData/LexData.csproj --startup-project LexBoxApi.csproj --context LexData.LexBoxDbContext

  db-update:
    desc: "Runs any migrations that haven't yet been applied or rolls back to the specified migration."
    dir: ./LexBoxApi
    cmds:
      - dotnet ef database update {{.CLI_ARGS}} --project ../LexData/LexData.csproj --startup-project LexBoxApi.csproj --context LexData.LexBoxDbContext

  dotnet:
    desc: "Directory independent access to api dotnet. E.g. `task dotnet -- restore`"
    aliases: [ dn ]
    dir: ./LexBoxApi
    cmd: dotnet {{.CLI_ARGS}}

  generate-gql-schema:
    aliases: [ gg ]
    dir: ./LexBoxApi
    cmds:
      - dotnet run generate-gql-schema

  build-docker:
    desc: "Builds the docker image for the LexBoxApi"
    dir: .
    cmds:
      - docker build -f Dockerfile .
  build-docker-dev:
    desc: "Builds the docker image for the LexBoxApi"
    dir: .
    cmds:
      - docker build -f LexBoxApi/dev.Dockerfile .

  install-dottrace:
    vars:
      api_pod:
        sh: kubectl get pods -l app=lexbox -o jsonpath='{.items[0].metadata.name}' --namespace languagedepot
    cmds:
#      - curl -O https://download.jetbrains.com/resharper/dotUltimate.2023.2/JetBrains.dotTrace.CommandLineTools.linux-x64.2023.2.tar.gz -L
      - kubectl exec {{.api_pod}} --container lexbox-api --namespace languagedepot -- sh -c "mkdir -p /dotTrace"
      - kubectl cp JetBrains.dotTrace.CommandLineTools.linux-x64.2023.2.tar.gz {{.api_pod}}:/dotTrace/JetBrains.dotTrace.CommandLineTools.linux-x64.2023.2.tar.gz --container lexbox-api --namespace languagedepot
      - kubectl exec {{.api_pod}} --container lexbox-api --namespace languagedepot -- sh -c "cd /dotTrace && tar -xf JetBrains.dotTrace.CommandLineTools.linux-x64.2023.2.tar.gz"



  install-dotMemory:
    vars:
      api_pod:
        sh: kubectl get pods -l app=lexbox -o jsonpath='{.items[0].metadata.name}' --namespace languagedepot
    cmds:
      - curl -O https://download.jetbrains.com/resharper/dotUltimate.2023.2/JetBrains.dotMemory.Console.linux-x64.2023.2.tar.gz -L
      - kubectl exec {{.api_pod}} --container lexbox-api --namespace languagedepot -- sh -c "mkdir -p /dotMemory"
      - kubectl cp JetBrains.dotMemory.Console.linux-x64.2023.2.tar.gz {{.api_pod}}:/dotMemory/JetBrains.dotMemory.Console.linux-x64.2023.2.tar.gz --container lexbox-api --namespace languagedepot
      - kubectl exec {{.api_pod}} --container lexbox-api --namespace languagedepot -- sh -c "cd /dotMemory && tar -xf JetBrains.dotMemory.Console.linux-x64.2023.2.tar.gz"
  start-memory-profile:
    interactive: true
    vars:
      api_pod:
        sh: kubectl get pods -l app=lexbox -o jsonpath='{.items[0].metadata.name}' --namespace languagedepot
    cmds:
      - kubectl exec {{.api_pod}} --container lexbox-api --namespace languagedepot -- sh -c "cd /dotMemory && ./dotmemory attach 1 --trigger-on-activation --trigger-delay=5s --trigger-timer=30s"

  staging-mongo-db-forward:
    cmds:
      - kubectl port-forward service/db 27018:27017 -n languageforge --context dallas-rke

  local-web-app-for-develop:
    label: dotnet
    dir: ./LocalWebApp
    cmd: dotnet watch --no-hot-reload
  local-web-app:
    label: Run LocalWebApp with Local LexBox
    env:
      Auth__DefaultAuthority: "https://localhost:3050"
    dir: ./LocalWebApp
    cmd: dotnet watch --no-hot-reload

  publish-local-all:
    cmds:
    - task: publish-local-win
    - task: publish-local-linux
    - task: publish-local-osx
    - task: publish-local-osx-arm
  publish-local-win:
    dir: ./LocalWebApp
    deps: [ui:build-viewer-app]
    cmd: dotnet publish -r win-x64
  publish-local-linux:
    dir: ./LocalWebApp
    cmd: dotnet publish -r linux-x64
  publish-local-osx:
    dir: ./LocalWebApp
    cmd: dotnet publish -r osx-x64
  publish-local-osx-arm:
    dir: ./LocalWebApp
    cmd: dotnet publish -r osx-arm64
