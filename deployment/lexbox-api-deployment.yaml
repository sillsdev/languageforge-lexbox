# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
apiVersion: v1
kind: Service
metadata:
  name: lexbox-api
  labels:
    app: lexbox-api
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: lexbox-api
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80

---

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lexbox-api
  labels:
    app: lexbox-api
spec:
  selector:
    matchLabels:
      app: lexbox-api
  strategy:
      type: Recreate
  template:
    # https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
        app: lexbox-api
    spec:
      containers:
      - name: lexbox-api
        image: ghcr.io/sillsdev/lexbox-api
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests: # TODO: need to establish resource limits, possibly after seeing it in action for some regular and/or load testing
            memory: 260Mi
            cpu: 0.1
          limits:
            memory: 400Mi

        volumeMounts:
        - name: repos
          mountPath: /hg-repos

        env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_DB
                  name: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
          - name: DbConfig__LexBoxConnectionString
            value: Host=db;Port=5432;Username=postgres;Password=$(POSTGRES_PASSWORD);Database=$(POSTGRES_DB)
          - name: HasuraConfig__HasuraUrl
            value: http://hasura:8080/v1/graphql
          - name: HasuraConfig__HasuraSecret
            valueFrom:
              secretKeyRef:
                  key: HASURA_GRAPHQL_ADMIN_SECRET
                  name: hasura
          - name: HgConfig__RepoPath
            value: /hg-repos
          - name: HgConfig__HgWebUrl
            value: http://hgweb:80
          - name: Clusters__hg-web__Destinations__hg-web-server__Address
            value: http://hgweb:80
          - name: Clusters__resumable-web__Destinations__resumable-web-server__Address
            value: http://hg-resumable:80

      volumes:
      - name: repos
        persistentVolumeClaim:
          claimName: hg-repos # established in hg-repos-pvc.yaml
