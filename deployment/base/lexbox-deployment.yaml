# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
apiVersion: v1
kind: Service
metadata:
  name: lexbox
  namespace: languagedepot
  labels:
    app: lexbox
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: lexbox
  ports:
  - name: http
    protocol: TCP
    port: 5158
  - name: otel
    protocol: TCP
    port: 4318
  - name: otel-grpc
    protocol: TCP
    port: 4317

---

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lexbox
  namespace: languagedepot
  labels:
    app: lexbox
spec:
  selector:
    matchLabels:
      app: lexbox
  progressDeadlineSeconds: 80
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    # https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
        app: lexbox
    spec:
      securityContext:
        runAsGroup: 33
        runAsUser: 33
        runAsNonRoot: true
      containers:
      - name: lexbox-api
        image: ghcr.io/sillsdev/lexbox-api:develop
        imagePullPolicy: IfNotPresent
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests:
            memory: 300Mi
          limits:
            memory: 350Mi
        startupProbe:
          httpGet:
            port: 5158
            path: /api/healthz
          failureThreshold: 30
          periodSeconds: 10
          timeoutSeconds: 5
        ports:
          - containerPort: 5158

        volumeMounts:
        - name: repos
          mountPath: /hg-repos
        - name: oauth-signing-cert
          mountPath: /oauth-certs/signing
          readOnly: true
        - name: oauth-encryption-cert
          mountPath: /oauth-certs/encryption
          readOnly: true

        env:
          - name: DOTNET_URLS
            value: http://0.0.0.0:5158
          - name: ASPNETCORE_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: environment-name
          - name: OTEL_METRIC_EXPORT_INTERVAL
            value: '60000' # 60s
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: k8s.node.name=$(K8S_NODE_NAME),k8s.pod.name=$(K8S_POD_NAME)
          - name: OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_DISABLE_URL_QUERY_REDACTION
            value: 'true'
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_DB
                  name: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
          - name: DbConfig__DefaultSeedUserPassword
            valueFrom:
              secretKeyRef:
                  key: SEED_USER_PASSWORD
                  name: db
                  optional: true
          - name: DbConfig__QaAdminEmail
            valueFrom:
              secretKeyRef:
                  key: QA_ADMIN_EMAIL
                  name: db
                  optional: true
          - name: DbConfig__LexBoxConnectionString
            value: Host=db;Port=5432;Username=postgres;Password=$(POSTGRES_PASSWORD);Database=$(POSTGRES_DB)
          - name: LfClassicConfig__ConnectionString
            value: mongodb://db.languageforge:27017
          - name: LfClassicConfig__AuthSource
            valueFrom:
              secretKeyRef:
                  key: MONGODB_AUTHSOURCE
                  name: lf-mongo-auth
          - name: LfClassicConfig__Username
            valueFrom:
              secretKeyRef:
                  key: MONGODB_USER
                  name: lf-mongo-auth
          - name: LfClassicConfig__Password
            valueFrom:
              secretKeyRef:
                  key: MONGODB_PASS
                  name: lf-mongo-auth
          - name: Authentication__Jwt__Secret
            valueFrom:
              secretKeyRef:
                  key: Authentication__Jwt__Secret
                  name: lexbox-api
          - name: ForwardedHeadersOptions__KnownNetworks__0
            value: "10.42.0.0/16"
          - name: MediaFileConfig__FwHeadlessUrl
            value: http://fw-headless:8081/
          - name: HgConfig__RepoPath
            value: /hg-repos
          - name: HgConfig__SendReceiveDomain
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: hg-domain
          - name: HgConfig__HgWebUrl
            value: http://hg:8088/hg/
          - name: HgConfig__HgCommandServer
            value: http://hg:8088/command/
          - name: HgConfig__HgResumableUrl
            value: http://hg:80/
          - name: HgConfig__AutoUpdateLexEntryCountOnSendReceive
            value: "true"
          - name: CloudFlare__TurnstileKey
            valueFrom:
              secretKeyRef:
                  key: CloudFlare__TurnstileKey
                  name: lexbox-api
          - name: Email__EmailRenderHost
            value: ui:3000
          - name: Email__SmtpUser
            valueFrom:
              secretKeyRef:
                key: SMTP_USER
                name: email
          - name: Email__SmtpPassword
            valueFrom:
              secretKeyRef:
                key: SMTP_PASSWORD
                name: email
          - name: Authentication__OpenId__Enable
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: enable-oauth
          - name: Authentication__Google__ClientId
            valueFrom:
              secretKeyRef:
                key: GOOGLE_OAUTH_CLIENT_ID
                name: google
          - name: Authentication__Google__ClientSecret
            valueFrom:
              secretKeyRef:
                key: GOOGLE_OAUTH_CLIENT_SECRET
                name: google
          - name: Email__BaseUrl
            value: http://localhost
          - name: Tus__TestUploadPath
            value: /tmp/tus-test-upload
          - name: Tus__ResetUploadPath
            value: /tmp/tus-reset-upload
          - name: Services__fwHeadless__http__0
            value: fw-headless:8081


      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.101.0
        args:
          - "--config"
          - "/etc/otelcol-contrib/config.yaml"
          - "--config"
          - "env:COLLECTOR_CONFIG_OVERRIDE"
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests:
            memory: 100Mi
          limits:
            memory: 100Mi
        ports:
          - containerPort: 4318
          - containerPort: 4317
        volumeMounts:
          - mountPath: /etc/otelcol-contrib
            name: otel-config
            readOnly: true

        env:
          - name: HONEYCOMB_API_KEY
            valueFrom:
              secretKeyRef:
                key: HONEYCOMB_API_KEY
                name: otel
          - name: COLLECTOR_CONFIG_OVERRIDE
            value: '' # should be YAML, will be merged with the base config file

      volumes:
      - name: repos
        persistentVolumeClaim:
          claimName: hg-repos # established in hg-repos-pvc.yaml
      - name: otel-config
        configMap:
          name: otel-config
          items:
            - key: collector-config.yaml
              path: config.yaml
      - name: oauth-signing-cert
        secret:
          secretName: oauth-signing-cert
          optional: true
      - name: oauth-encryption-cert
        secret:
          secretName: oauth-encryption-cert
          optional: true

      initContainers:
      - name: db-migrations
        # Should be same image as lexbox-api container
        image: ghcr.io/sillsdev/lexbox-api:develop
        command: ['sh', '-c', 'dotnet LexBoxApi.dll migrate']
        env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_DB
                  name: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
          - name: DbConfig__DefaultSeedUserPassword
            valueFrom:
              secretKeyRef:
                key: SEED_USER_PASSWORD
                name: db
                optional: true
          - name: DbConfig__LexBoxConnectionString
            value: Host=db;Port=5432;Username=postgres;Password=$(POSTGRES_PASSWORD);Database=$(POSTGRES_DB)
          - name: DOTNET_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: environment-name
          - name: Authentication__OpenId__Enable
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: enable-oauth
      - name: set-repo-structure-owner-to-www-data
        securityContext:
          # Make sure we're authorized to set ownership
          runAsUser: 0
          runAsGroup: 0
          runAsNonRoot: false
        image: busybox:1.36.1
        command:
          - 'sh'
          - '-c'
          - |
            cd /repos
            chown www-data:www-data .
            # Only necessary if directories already exist with the wrong ownership
            find . -maxdepth 1 -type d ! -name lost+found -exec chown www-data:www-data {} +
        volumeMounts:
          - name: repos
            mountPath: /repos
