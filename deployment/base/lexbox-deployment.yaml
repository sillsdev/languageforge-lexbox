# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
apiVersion: v1
kind: Service
metadata:
  name: lexbox
  namespace: languagedepot
  labels:
    app: lexbox
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: lexbox
  ports:
  - name: http
    protocol: TCP
    port: 5158
  - name: otel
    protocol: TCP
    port: 4318
  - name: otel-grpc
    protocol: TCP
    port: 4317

---

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lexbox
  namespace: languagedepot
  labels:
    app: lexbox
spec:
  selector:
    matchLabels:
      app: lexbox
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    # https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
        app: lexbox
    spec:
      securityContext:
        fsGroup: 33
      containers:
      - name: lexbox-api
        # TODO: need to parameterize this tag
        image: ghcr.io/sillsdev/lexbox-api:develop
        imagePullPolicy: Always
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests: # TODO: need to establish resource limits, possibly after seeing it in action for some regular and/or load testing
            memory: 200Mi
          limits:
            memory: 250Mi
        startupProbe:
          httpGet:
            port: 5158
            path: /api/healthz
          failureThreshold: 30
          periodSeconds: 10
        ports:
          - containerPort: 5158

        volumeMounts:
        - name: repos
          mountPath: /hg-repos

        env:
          - name: DOTNET_URLS
            value: http://0.0.0.0:5158
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          - name: OTEL_METRIC_EXPORT_INTERVAL
            value: '15000' # 15 seconds
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_DB
                  name: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
          - name: DbConfig__DefaultSeedUserPassword
            valueFrom:
              secretKeyRef:
                  key: SEED_USER_PASSWORD
                  name: db
          - name: DbConfig__LexBoxConnectionString
            value: Host=db;Port=5432;Username=postgres;Password=$(POSTGRES_PASSWORD);Database=$(POSTGRES_DB)
          - name: Authentication__Jwt__Secret
            valueFrom:
              secretKeyRef:
                  key: Authentication__Jwt__Secret
                  name: lexbox-api
          - name: HgConfig__RepoPath
            value: /hg-repos
          - name: HgConfig__HgWebUrl
            value: http://hg:8088/hg/
          - name: HgConfig__HgResumableUrl
            value: http://hg:80/
          - name: ReverseProxy__Clusters__hgWeb__Destinations__hgWebServer__Address
            value: http://hg:8088
          - name: ReverseProxy__Clusters__resumableWeb__Destinations__resumableWebServer__Address
            value: http://hg:80
          - name: CloudFlare__TurnstileKey
            valueFrom:
              secretKeyRef:
                  key: CloudFlare__TurnstileKey
                  name: lexbox-api
          - name: Email__EmailRenderHost
            value: ui:3000
          - name: Email__SmtpUser
            valueFrom:
              secretKeyRef:
                key: SMTP_USER
                name: email
          - name: Email__SmtpPassword
            valueFrom:
              secretKeyRef:
                key: SMTP_PASSWORD
                name: email

      - name: otel-collector
        image: otel/opentelemetry-collector:0.73.0
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests: # TODO: need to establish resource limits, possibly after seeing it in action for some regular and/or load testing
            memory: 50Mi
          limits:
            memory: 100Mi
        ports:
          - containerPort: 4318
          - containerPort: 4317
        volumeMounts:
          - mountPath: /etc/otelcol
            name: otel-config
            readOnly: true

        env:
          - name: HONEYCOMB_API_KEY
            valueFrom:
              secretKeyRef:
                key: HONEYCOMB_API_KEY
                name: otel

      volumes:
      - name: repos
        persistentVolumeClaim:
          claimName: hg-repos # established in hg-repos-pvc.yaml
      - name: otel-config
        configMap:
          name: otel-config
          items:
            - key: collector-config.yaml
              path: config.yaml

      initContainers:
      - name: wait-db
        image: busybox:1.36.1
        command: ['sh', '-c', "until nc -w 1 -z db 5432; do echo waiting for db; sleep 2; done; echo db ready"]
      - name: db-migrations
        # Should be same image as lexbox-api container
        image: ghcr.io/sillsdev/lexbox-api:develop
        command: ['sh', '-c', 'dotnet LexBoxApi.dll migrate']
        env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_DB
                  name: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: db
          - name: DbConfig__DefaultSeedUserPassword
            valueFrom:
              secretKeyRef:
                key: SEED_USER_PASSWORD
                name: db
          - name: DbConfig__LexBoxConnectionString
            value: Host=db;Port=5432;Username=postgres;Password=$(POSTGRES_PASSWORD);Database=$(POSTGRES_DB)
