# See: https://opentelemetry.io/docs/collector/configuration/

# https://github.com/open-telemetry/opentelemetry-collector/blob/main/receiver/README.md
# The only core/non-contrib receiver
receivers:
  otlp:
    protocols:
      grpc:
      http:
        # TODO: are these needed?
        # cors:
        #   allowed_origins:
        #     - "https://languagedepot.org"
        #     - "http://127.0.0.1:3000"

# https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/README.md#recommended-processors
# The recommended core processors. The memory limiter probably won't do much, but it certainly doesn't hurt.
processors:
  batch:
    timeout: 1s
  memory_limiter:
    check_interval: 1s
    limit_mib: 400

exporters:
  logging:
  otlp:
    endpoint: api.honeycomb.io:443
    headers:
      "x-honeycomb-team": ${HONEYCOMB_API_KEY}
  otlp/metrics:
    endpoint: api.honeycomb.io:443
    headers:
      "x-honeycomb-team": ${HONEYCOMB_API_KEY}
      # https://docs.honeycomb.io/getting-data-in/otel-collector/#metrics-and-logs-signals
      # "Metrics require a dataset in the exporter."
      "x-honeycomb-dataset": LexBox-Metrics

# extensions:
#   health_check:

service:
  # extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter]
      exporters: [otlp, logging]
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlp/metrics, logging]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlp, logging]
  telemetry:
    logs:
      #level: "debug"
