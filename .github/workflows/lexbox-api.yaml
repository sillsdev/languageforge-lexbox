name: publish & deploy Lexbox api

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/lexbox-api.yaml'
      - 'deployment/lexbox-deployment.yaml'
env:
  PROD_RELEASE: ${{github.ref == vars.PROD_BRANCH}}


jobs:
  publish-api:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setVersion.outputs.VERSION }}

    env:
      # https://docs.docker.com/develop/develop-images/build_enhancements/
      DOCKER_BUILDKIT: 1

    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set Version
        id: setVersion
        # set version to date in vYYYY-MM-DD format
        run: |
          echo "VERSION=v$(date --rfc-3339=date)" >> ${GITHUB_ENV}
          echo "VERSION=v$(date --rfc-3339=date)" >> ${GITHUB_OUTPUT}
      -
        name: Docker meta
        id: meta
        if: ${{ !env.ACT }}
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/sillsdev/lexbox-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,enable=${{ env.PROD_RELEASE }},value=latest
            type=raw,enable=${{ env.PROD_RELEASE }},value=${{ env.VERSION }}
      -
        name: ghcr.io login
        uses: docker/login-action@v2
        if: ${{ !env.ACT }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        uses: docker/build-push-action@v4
        with:
          context: backend
          build-args: |
            APP_VERSION=${{ env.VERSION }}
          push: ${{ !env.ACT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: publish-api
    if: ${{ github.ref ==  vars.PROD_BRANCH }}
    environment: 
        name: staging
        url: https://staging.languagedepot.org
    steps:
      - name: Deploy
        uses: drlove2002/secure-github-webhook@0.3.0
        with:
          url: ${{ vars.DEPLOY_WEBHOOK_URL }}
          hmacSecret: ${{ secrets.DEPLOY_KEY }}
          data: >-
            {
              "action" : "push",
              "ref" : "${{ github.ref }}",
              "version": "${{ needs.build.outputs.version }}"
            }
      - name: Verify Version
        env: 
          TARGET_HOST: https://staging.languagedepot.org
          EXPECTED_VERSION: ${{ needs.build.outputs.version }}
        run: |
          IterateCount=5
          n=0
          until [ $n -ge $IterateCount ]
          do
            response=`curl -s --head "$TARGET_HOST/api/healthz"`
            # get version from response, trim off the header and fix the line endings
            versionHeader=`echo "$response" | grep "lexbox-version" | cut -d' ' -f 2 | tr -d '[:space:]'`
            if [[ "$versionHeader" == "$EXPECTED_VERSION" ]]; then
                echo "Version is correct"
                exit 0
            else
                echo "Version $versionHeader is incorrect, expected $EXPECTED_VERSION"
                n=$((n+1)) 
                sleep $((2 * n))
            fi
          done

          echo "Version $versionHeader is still incorrect after waiting"
          exit 1