name: Deploy
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version of the image to deploy'
        type: string
        required: true
      image:
        description: 'The image to update'
        type: string
        required: true
      health-endpoint:
        description: 'The health endpoint to check'
        type: string
        required: true
      k8s-environment:
        description: 'The k8s environment to deploy to, needs to be a valid folder under deployment'
        type: string
        required: true
  workflow_call:
    inputs:
      version:
        description: 'The version of the image to deploy'
        type: string
        required: true
      image:
        description: 'The image to update'
        type: string
        required: true
      health-endpoint:
        description: 'The health endpoint to check'
        type: string
        required: true
      k8s-environment:
        description: 'The k8s environment to deploy to, needs to be a valid folder under deployment'
        type: string
        required: true

jobs:
  deploy:
    # deploy checks out the fleet repo, we don't want more than one just running at once to avoid conflicts
    concurrency: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lexbox repo
        uses: actions/checkout@v3
        with:
          path: lexbox
      - name: Run kustomize
        working-directory: lexbox/deployment/${{ inputs.k8s-environment }}
        run: |
          kubectl kustomize . -o resources.yaml
      - name: Checkout fleet repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.FLEET_REPO }} # todo move these out of environments into repo secrets
          ssh-key: ${{ secrets.FLEET_REPO_SSH_KEY }}
          path: fleet
      - name: Copy yaml resources to fleet repo
        run: |
          cp lexbox/deployment/${{ inputs.k8s-environment }}/resources.yaml fleet/languageforge-lexbox/
      #        this kustomization file is in the fleet repo and only modifies the image versions being used.
      - name: Update image version in fleet kustomization.yaml
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: yq eval -i '(.images.[] | select(.name == "${{ inputs.image }}").newTag) = "${{ inputs.version }}"' "fleet/languageforge-lexbox/kustomization.yaml"
      - name: Push to fleet repo
        uses: EndBug/add-and-commit@v9 #https://github.com/EndBug/add-and-commit
        with:
          default_author: github_actions
          message: "[Lexbox] Update ${{ inputs.k8s-environment }} image: ${{ inputs.image }} to ${{ inputs.version }}"
          cwd: './fleet/'
          add: 'languageforge-lexbox/*'
          push: true
  verify-published:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Verify Version
        env:
          TARGET_ENDPOINT: ${{ inputs.health-endpoint }}
          EXPECTED_VERSION: ${{ inputs.version }}
        run: |
          IterateCount=10
          DelayMultiplier=5
          n=0
          until [ $n -ge $IterateCount ]
          do
            curl -s --head "$TARGET_ENDPOINT" > response.txt
            # get version from response, trim off the header and fix the line endings
            versionHeader=$((grep "lexbox-version" response.txt || echo VersionNotFound) | cut -d' ' -f 2 | tr -d '[:space:]')
            if [[ "$versionHeader" == "$EXPECTED_VERSION" ]]; then
                echo "Version is correct"
                exit 0
            else
                echo "Version '$versionHeader' is incorrect, expected '$EXPECTED_VERSION'"
                echo "response was:"
                cat response.txt
                n=$((n+1))
                sleep $((DelayMultiplier * n))
            fi
          done

          echo "Version $versionHeader is still incorrect after waiting"
          exit 1

