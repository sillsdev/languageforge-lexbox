# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev

version: '3'
vars:
  TESTING_DIR: './backend/Testing'
  HG_REPO_DIR: './hgweb/repos'
includes:
  k8s:
    taskfile: ./deployment/Taskfile.yml
    dir: ./deployment
  gh:
    dir: .
    taskfile: ./.github/Taskfile.yml
  ui:
    taskfile: ./frontend/Taskfile.yml
    dir: ./frontend
  api:
    taskfile: ./backend/Taskfile.yml
    dir: ./backend
  hgweb:
    taskfile: ./hgweb/Taskfile.yml
    dir: ./hgweb

tasks:
  setup:
    deps: [ setup-win, setup-unix ]
    cmds:
      - git config blame.ignoreRevsFile .git-blame-ignore-revs
      - echo HONEYCOMB_API_KEY=__REPLACE__ >> deployment/dev/local.env
  setup-win:
    platforms: [ windows ]
    cmds:
      - cmd: powershell rm -r {{.HG_REPO_DIR}}/sena-3
        ignore_error: true
        silent: true
      - powershell -Command "Invoke-WebRequest 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS' -OutFile sena-3.zip"
      - powershell -Command "Expand-Archive sena-3.zip -DestinationPath {{.HG_REPO_DIR}}"
      - powershell rm sena-3.zip
  setup-unix:
    platforms: [ linux, darwin ]
    cmds:
      - cmd: rm -rf {{.HG_REPO_DIR}}/sena-3
        ignore_error: true
        silent: true
      - wget -O sena-3.zip 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS'
      - unzip -q sena-3.zip -d {{.HG_REPO_DIR}}/
      - rm sena-3.zip

  # k8s
  up:
    interactive: true
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop

  # tests
  test:
    dir: '{{.TESTING_DIR}}'
    cmds:
      - dotnet test --filter=Category!=Integration
  test-integration-staging:
    env:
      TEST_DEFAULT_PASSWORD: '***'
#      set to enable debug mode, number of ms to delay actions
      PWDEBUG: 0
    cmds:
#      - 'read -p "password: " TEST_DEFAULT_PASSWORD'
      - dotnet test --filter Category=Integration   -s ./backend/Testing/staging.runsettings

      # dev
  infra-up:
    desc: 'Starts infrastructure for our ui and api, if you want port forwarding use k8s:infra-forward'
    cmds:
      - skaffold run --cleanup=false --kube-context docker-desktop --profile=infra
  backend-up:
    desc: Starts entire backend for our ui (including the LexBox api)
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop --profile=no-frontend

  ui-dev:
    aliases: [ ui ]
    desc: The single command for local ui development
    dir: ./frontend
    deps: [ backend-up, ui:only ]
    interactive: true

      # api
  api-dev:
    aliases: [ api ]
    desc: The single command for local api development
    deps: [ infra-up, api:only, k8s:infra-forward ]
    interactive: true


