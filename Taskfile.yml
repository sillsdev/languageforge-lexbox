# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev

version: '3'
vars:
  TESTING_DIR: './backend/Testing'
  HG_REPO_DIR: './hgweb/repos'
includes:
  k8s:
    taskfile: ./deployment/Taskfile.yml
    dir: ./deployment

tasks:
  setup:
    deps: [ setup-win, setup-unix ]
    cmds:
      - git config blame.ignoreRevsFile .git-blame-ignore-revs
  setup-win:
    platforms: [ windows ]
    cmds:
      - cmd: powershell rm -r {{.HG_REPO_DIR}}/sena-3
        ignore_error: true
        silent: true
      - powershell -Command "Invoke-WebRequest 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS' -OutFile sena-3.zip"
      - powershell -Command "Expand-Archive sena-3.zip -DestinationPath {{.HG_REPO_DIR}}"
      - powershell rm sena-3.zip
  setup-unix:
    platforms: [ linux, darwin ]
    cmds:
      - cmd: rm -rf {{.HG_REPO_DIR}}/sena-3
        ignore_error: true
        silent: true
      - wget -O sena-3.zip 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS'
      - unzip -q sena-3.zip -d {{.HG_REPO_DIR}}/
      - rm sena-3.zip

  # docker
  up: # e.g. task up -- otel-collector --build
    cmds:
      - docker compose up --wait {{.CLI_ARGS}}
  down:
    cmds:
      - docker compose down
  restart: # e.g. task restart -- lexbox-api
    cmds:
      - docker compose restart {{.CLI_ARGS}}

  # tests
  test:
    dir: '{{.TESTING_DIR}}'
    cmds:
      - dotnet test --filter=Category!=Integration
  test-sr:
    dir: '{{.TESTING_DIR}}'
    deps: [ up ]
    cmds:
      - dotnet test --filter=SendReceive
  test-integration:
    dir: '{{.TESTING_DIR}}'
    deps: [ up ]
    cmds:
      - dotnet test --filter Category=Integration
  test-integration-staging:
    env:
      TEST_SERVER_HOSTNAME: staging.languagedepot.org
      TEST_STANDARD_HG_HOSTNAME: hg-staging.languagedepot.org
      TEST_RESUMABLE_HG_HOSTNAME: resumable-staging.languagedepot.org
    cmds:
      - dotnet test --filter Category=Integration

      # dev
  infra-up: # infrastructure for our ui and api
    vars:
      WAIT: '{{default true .WAIT}}'
    cmds:
      - docker compose up maildev db hgweb otel-collector hgresumable -d --wait={{.WAIT}}

  backend-up:
    vars:
      WAIT: '{{default true .WAIT}}'
    cmds:
      # GraphQL breaks if changes are made while running in docker, so a restart is handy
      - task: api-stop
      # Needs to start before Hasura (can't use depends-on in docker-compose.yaml, because that wouldn't support running the api locally)
      - task: api-up
      - docker compose up hasura -d --wait={{.WAIT}}

  dev: # Currently broken (because the ui doesn't wait for the api), but probably no one uses it.
    deps: [ api-dev, ui-only]
    interactive: true

  # ui
  ui-dev: # The single command for ui development
    aliases:
      - ui
    dir: ./frontend
    deps: [ backend-up, ui-down ]
    interactive: true
    cmds:
      - task: ui-only
  ui-only:
    aliases:
      - uio
    dir: ./frontend
    deps: [ ui-install ]
    interactive: true
    cmds:
      - pnpm run dev
  ui-install:
    dir: ./frontend
    method: checksum
    sources:
      - package.json
      - pnpm-lock.yaml
    cmds:
      - corepack enable || true
      - pnpm install
  ui-down:
    cmds:
      - docker compose stop ui
  # api
  api-dev: # The single command for api development
    aliases:
      - api
    dir: ./backend/LexBoxApi
    deps: [ infra-up, api-stop ]
    interactive: true
    cmds:
      - dotnet watch
  api-up:
    vars:
      WAIT: '{{default true .WAIT}}'
    cmds:
      - docker compose up lexbox-api --wait={{.WAIT}}
  api-stop:
    cmds:
      - docker compose stop lexbox-api

  migrate-db:
    dir: ./backend/LexBoxApi
    cmd: dotnet run migrate --environment "Development"
