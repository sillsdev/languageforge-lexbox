# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev

version: '3'
vars:
  TESTING_DIR: './backend/Testing'
  HG_REPO_DIR: './hgweb/repos'
  DATA_DIR: './data'
includes:
  k8s:
    taskfile: ./deployment/Taskfile.yml
    dir: ./deployment
  gh:
    dir: ./.github
    taskfile: ./.github/Taskfile.yml
  ui:
    taskfile: ./frontend/Taskfile.yml
    dir: ./frontend
  api:
    taskfile: ./backend/Taskfile.yml
    dir: ./backend
  hgweb:
    taskfile: ./hgweb/Taskfile.yml
    dir: ./hgweb
  test:
    taskfile: ./backend/Testing/Taskfile.yml
    dir: ./backend/Testing

tasks:
  setup:
    deps: [ setup-win, setup-unix ]
    cmds:
      - git config blame.ignoreRevsFile .git-blame-ignore-revs
      - echo "HONEYCOMB_API_KEY=__REPLACE__" >> deployment/local-dev/local.env
      - echo "#OTEL_SDK_DISABLED=true" >> deployment/local-dev/local.env
      - echo "GOOGLE_OAUTH_CLIENT_ID=__REPLACE__.apps.googleusercontent.com" >> deployment/local-dev/local.env
      - echo "GOOGLE_OAUTH_CLIENT_SECRET=__REPLACE__" >> deployment/local-dev/local.env
      - kubectl --context=docker-desktop apply -f deployment/setup/namespace.yaml
      - docker build -t local-dev-init data/
  setup-win:
    platforms: [ windows ]
    cmds:
      - powershell -Command "Invoke-WebRequest 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS' -OutFile {{.DATA_DIR}}/sena-3.zip -Resume"
      - powershell -Command "Invoke-WebRequest 'https://drive.usercontent.google.com/download?export=download&id=1Jk-eSDho8ATBMS-Kmfatwi-MWQth26ro&confirm=t' -OutFile {{.DATA_DIR}}/elawa.zip -Resume"
  setup-unix:
    platforms: [ linux, darwin ]
    cmds:
      - wget -c -O {{.DATA_DIR}}/sena-3.zip 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS'
      - wget -c -O {{.DATA_DIR}}/elawa.zip 'https://drive.usercontent.google.com/download?export=download&id=1Jk-eSDho8ATBMS-Kmfatwi-MWQth26ro&confirm=t'

  # k8s
  up:
    interactive: true
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop

      # dev
  infra-up:
    desc: 'Starts infrastructure for our ui and api, if you want port forwarding use k8s:infra-forward'
    cmds:
      - skaffold run --cleanup=false --kube-context docker-desktop --profile=infra
  backend-up:
    desc: Starts entire backend for our ui (including the LexBox api)
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop --profile=no-frontend

  ui-dev:
    aliases: [ ui ]
    desc: The single command for local ui development
    dir: ./frontend
    deps: [ backend-up, ui:only ]
    interactive: true

      # api
  api-dev:
    aliases: [ api ]
    desc: The single command for local api development
    deps: [ infra-up, api:only, k8s:infra-forward ]
    interactive: true

  local-web-app-for-develop:
    deps: [ ui:viewer-dev, api:local-web-app-for-develop, ui:https-oauth-authority ]

  local-web-app:
    deps: [ ui:viewer-dev, api:local-web-app, ui:https-oauth-authority ]
