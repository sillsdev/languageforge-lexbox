# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev

version: '3'
vars:
  TESTING_DIR: './backend/Testing'
  HG_REPO_DIR: './hgweb/repos'
  DATA_DIR: './data'
includes:
  k8s:
    taskfile: ./deployment/Taskfile.yml
    dir: ./deployment
  gh:
    dir: ./.github
    taskfile: ./.github/Taskfile.yml
  ui:
    taskfile: ./frontend/Taskfile.yml
    dir: ./frontend
  api:
    taskfile: ./backend/Taskfile.yml
    dir: ./backend
  hgweb:
    taskfile: ./hgweb/Taskfile.yml
    dir: ./hgweb
  test:
    taskfile: ./backend/Testing/Taskfile.yml
    dir: ./backend/Testing

tasks:
  setup:
    deps: [ setup-win, setup-unix ]
    cmds:
      - git config blame.ignoreRevsFile .git-blame-ignore-revs
      - echo "HONEYCOMB_API_KEY=__REPLACE__" >> deployment/local-dev/local.env
      - echo "#OTEL_SDK_DISABLED=true" >> deployment/local-dev/local.env
      - echo "GOOGLE_OAUTH_CLIENT_ID=__REPLACE__.apps.googleusercontent.com" >> deployment/local-dev/local.env
      - echo "GOOGLE_OAUTH_CLIENT_SECRET=__REPLACE__" >> deployment/local-dev/local.env
      - kubectl --context=docker-desktop apply -f deployment/setup/namespace.yaml
      - kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.0/cert-manager.yaml
      - docker build -t local-dev-init data/
  setup-win:
    platforms: [ windows ]
    cmds:
      - powershell -File download.ps1 sena-3 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS' 'BEC5131799DB07BF8D84D8FC1F3169FB2574F2A1F4C37F6898EAB563A4AE95B8'
      - powershell -File download.ps1 empty 'https://drive.google.com/uc?export=download&id=1p73u-AGdSwNkg_5KEv9-4iLRuN-1V-LD' 'F4EB48D2C7B3294DCA93965F14F058E56D797F38D562B86CF0372F774E1B486B'
      - powershell -File download.ps1 elawa 'https://drive.usercontent.google.com/download?export=download&id=1Jk-eSDho8ATBMS-Kmfatwi-MWQth26ro&confirm=t' "E3608F1E3188CE5FDB166FBF9D5AAD06558DB68EFA079FB453881572B50CB8E3"
  setup-unix:
    platforms: [ linux, darwin ]
    cmds:
      - wget -c -O {{.DATA_DIR}}/sena-3.zip 'https://drive.google.com/uc?export=download&id=1I-hwc0RHoQqW774gbS5qR-GHa1E7BlsS'
      - wget -c -O {{.DATA_DIR}}/empty.zip 'https://drive.google.com/uc?export=download&id=1p73u-AGdSwNkg_5KEv9-4iLRuN-1V-LD'
      - wget -c -O {{.DATA_DIR}}/elawa.zip 'https://drive.usercontent.google.com/download?export=download&id=1Jk-eSDho8ATBMS-Kmfatwi-MWQth26ro&confirm=t'

  # k8s
  up:
    interactive: true
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop

      # dev
  infra-up:
    desc: 'Starts infrastructure for our ui and api, if you want port forwarding use k8s:infra-forward'
    cmds:
      - skaffold run --cleanup=false --kube-context docker-desktop --profile=infra
  backend-up:
    desc: Starts entire backend for our ui (including the LexBox api)
    cmds:
      - skaffold dev --cleanup=false --kube-context docker-desktop --profile=no-frontend

  ui-dev:
    aliases: [ ui ]
    desc: The single command for local ui development
    dir: ./frontend
    deps: [ backend-up, ui:only ]
    interactive: true

      # api
  api-dev:
    aliases: [ api ]
    desc: The single command for local api development
    deps: [ infra-up, api:only, k8s:infra-forward ]
    interactive: true

  local-web-app-for-develop:
    deps: [ ui:viewer-dev, api:local-web-app-for-develop, ui:https-oauth-authority ]

  local-web-app:
    deps: [ ui:viewer-dev, api:local-web-app, ui:https-oauth-authority ]
